summary: Check that snap service operations can be selected for both user and system services

details: |
    With the addition of --user, --users and --system switches for snap operations like
    snap start/stop/restart, we want to test that we can select user and/or system services,
    when performing these operations.

# ubuntu-14.04: no support for user sessions used by test helpers
systems: [ -ubuntu-14.04-* ]

prepare: |
    snap set system experimental.user-daemons=true
    tests.session kill-leaked
    tests.session -u test prepare

    cat <<\EOF >/etc/polkit-1/localauthority/50-local.d/spread.pkla
    [Normal Staff Permissions]
    Identity=unix-user:test
    Action=io.snapcraft.snapd.manage
    ResultAny=yes
    ResultInactive=no
    ResultActive=yes
    EOF

restore: |
    tests.session -u test restore
    snap unset system experimental.user-daemons

debug: |
    tests.session dump
    tests.session -u test exec systemctl --user status snapd.session-agent.service || true
    tests.session -u test exec journalctl --user || true

execute: |
    echo "Installing the service snap"
    "$TESTSTOOLS"/snaps-state install-local test-snapd-user-service

    echo "We can see the system services running"
    systemctl status snap.test-snapd-user-service.svc3.service | MATCH "running"
    systemctl status snap.test-snapd-user-service.svc4.service | MATCH "running"

    echo "We can see the user services running"
    tests.session -u test exec systemctl --user is-active snap.test-snapd-user-service.svc1.service | MATCH "active"
    tests.session -u test exec systemctl --user is-active snap.test-snapd-user-service.svc2.service | MATCH "active"

    # if root is making this request, implied scopes are all
    echo "(root) Stopping all services for snap"
    snap stop test-snapd-user-service
    systemctl status snap.test-snapd-user-service.svc3.service | MATCH "inactive"
    systemctl status snap.test-snapd-user-service.svc4.service | MATCH "inactive"
    tests.session -u test exec systemctl --user is-active snap.test-snapd-user-service.svc1.service | MATCH "inactive"
    tests.session -u test exec systemctl --user is-active snap.test-snapd-user-service.svc2.service | MATCH "inactive"

    # if non-root are making requests, and user services are the target,
    # then its an error to not specify --user scope
    echo "(user) Trying to start services for snap, which will fail with no scope set"
    tests.session -u test exec snap start test-snapd-user-service 2>&1 | MATCH "a service scope must be provided"
    
    echo "(user) Starting user services for snap with scope --user"
    tests.session -u test exec snap start --user test-snapd-user-service

    echo "And we can see the user services running"
    tests.session -u test exec systemctl --user is-active snap.test-snapd-user-service.svc1.service | MATCH "active"
    tests.session -u test exec systemctl --user is-active snap.test-snapd-user-service.svc2.service | MATCH "active"

    echo "System services are still not running"
    systemctl status snap.test-snapd-user-service.svc3.service | MATCH "inactive"
    systemctl status snap.test-snapd-user-service.svc4.service | MATCH "inactive"

    echo "(user) Trying to start system services without root, will fail"
    tests.session -u test exec snap start --system test-snapd-user-service 2>&1 | MATCH "no users were listed"

    echo "(root) Stopping all services for snap"
    snap stop test-snapd-user-service
    systemctl status snap.test-snapd-user-service.svc3.service | MATCH "inactive"
    systemctl status snap.test-snapd-user-service.svc4.service | MATCH "inactive"
    tests.session -u test exec systemctl --user is-active snap.test-snapd-user-service.svc1.service | MATCH "inactive"
    tests.session -u test exec systemctl --user is-active snap.test-snapd-user-service.svc2.service | MATCH "inactive"

    echo "(root) Starting system services for snap with scope --system"
    snap start --system test-snapd-user-service

    echo "And only system services are running"
    systemctl status snap.test-snapd-user-service.svc3.service | MATCH "running"
    systemctl status snap.test-snapd-user-service.svc4.service | MATCH "running"
    tests.session -u test exec systemctl --user is-active snap.test-snapd-user-service.svc1.service | MATCH "inactive"
    tests.session -u test exec systemctl --user is-active snap.test-snapd-user-service.svc2.service | MATCH "inactive"

    echo "(root) Starting user services for snap with scope --user"
    snap start --user test-snapd-user-service 2>&1 | MATCH "cannot use \"user\""

    echo "(root) Starting user services for snap with scope --users"
    snap start --users test-snapd-user-service

    echo "And we can see the user services running"
    tests.session -u test exec systemctl --user is-active snap.test-snapd-user-service.svc1.service | MATCH "active"
    tests.session -u test exec systemctl --user is-active snap.test-snapd-user-service.svc2.service | MATCH "active"

